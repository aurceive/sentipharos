# Dockerfile
# Используем Python-образ
FROM python:3.12-slim

# Устанавливаем зависимости
COPY requirements.txt .
RUN pip install -r requirements.txt

# Копируем кэш модели
# COPY .cache/huggingface/hub/models--intfloat--e5-mistral-7b-instruct /root/.cache/huggingface/hub/models--intfloat--e5-mistral-7b-instruct
COPY .cache/huggingface/hub/models--intfloat--multilingual-e5-large-instruct /root/.cache/huggingface/hub/models--intfloat--multilingual-e5-large-instruct

# Скопируйте ваш скрипт в контейнер
COPY app.py /app/app.py

# Задайте рабочую директорию
WORKDIR /app

# Укажите порт, который будете использовать
EXPOSE 8080

# Запуск приложения с uvicorn для асинхронного сервера
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8080"]

# fes — feature extraction service

# docker build -t gcr.io/sentipharos/fes --file server/fes/Dockerfile.fes server/fes
# docker push gcr.io/sentipharos/fes

# gcloud run deploy fes --image gcr.io/sentipharos/fes --platform managed --region europe-north1 --allow-unauthenticated --memory 6Gi --cpu 4 --max-instances 1
# gcloud run deploy fes --image gcr.io/sentipharos/fes --platform managed --region europe-north1 --allow-unauthenticated --memory 16Gi --cpu 6
